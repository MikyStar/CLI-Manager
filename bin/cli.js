#!/usr/bin/env node

(()=>{"use strict";var t={142:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(374),i=s(630),n=s(970),o=r(s(781)),l=s(583),c=s(310),d=s(219),h=s(561);try{const t=new l.MainController,{argHandler:e,printer:s}=t,{words:r,infos:i}=e,[o]=r,{isThereCLIArgs:c,isThereCliFlagCommand:d,isThereOnlyOneCLIArgs:u}=i;if(c||d||(s.setView("full").printView(),n.System.exit()),u&&(0,a.isTask)(o)){const t=o.value;s.setView("specific",t).printView(),n.System.exit()}(0,a.isAction)(o)&&(new h.ActionHandler(t),n.System.exit())}catch(t){t instanceof d.CatchableError?t instanceof c.CLISyntaxError?((0,i.printError)(t.message),(0,i.printMessage)(o.default.getMan(t.manEntry))):(0,i.printError)(t.message):console.error(t),n.System.exit(-1)}},561:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ActionHandler=void 0;const r=s(630),a=s(230),i=s(1),n=s(175),o=s(310),l=s(374),c=s(506);e.ActionHandler=class{constructor(t){this.mainController=t;const{argHandler:e,storage:s,config:d,printer:h,finalStorageLocation:u}=this.mainController,{words:g,flags:p,infos:f}=e,{dataAttributes:k,isRecursive:E}=p,{state:T,description:y,priority:m}=k,{isThereOnlyOneCLIArgs:b}=f,[A,v,S]=g;if(!s)throw new o.StorageError(`Can't find the task storage file '${u}'`);switch(A.value){case l.Action.ADD_TASK:{let t;if(b)t=a.Prompt.addTask(s,d);else{const r=new n.Task({name:e.getFirstText(),state:T||s.meta.states[0].name,description:y,priority:m});let a;if((0,l.isTask)(v)){const t=v.value;a=t,h.setView("specific",t)}else h.setView("full");t=s.addTask(r,a)}h.addFeedback(`Task n°${t} added`).print();break}case l.Action.EDIT:{if(!(0,l.isTask)(v))throw new o.EditingSyntaxError("Your second arguments should be one or more tasks id join by ',' or a board name");const t=e.getFirstText();if((0,l.isTask)(v)){const e={name:t,state:T,description:y,priority:m};t||delete e.name,T||delete e.state,y||delete e.description,m||delete e.priority;const{ids:r,textID:a,textTask:i}=(0,c.idsController)(s,v.value);s.editTask(r,e,E),h.addFeedback(`${i} '${a}' edited`).setView("specific",r)}h.print();break}case l.Action.CHECK:{if(!(0,l.isTask)(v))throw new o.CheckingTaskSyntaxError("Your second arguments should be a number or numbers join by ','");const{ids:t,textID:e,textTask:r}=(0,c.idsController)(s,v.value),a=s.meta.states[s.meta.states.length-1].name;s.editTask(t,{state:a},E),h.addFeedback(`${r} '${e}' checked`).setView("specific",t).print();break}case l.Action.RESET:{if(!(0,l.isTask)(v))throw new o.CheckingTaskSyntaxError("Your second arguments should be a number or numbers join by ','");const{ids:t,textID:e,textTask:r}=(0,c.idsController)(s,v.value),a=s.meta.states[0].name;s.editTask(t,{state:a},E),h.addFeedback(`${r} '${e}' checked`).setView("specific",t).print();break}case l.Action.INCREMENT:{if(!(0,l.isTask)(v))throw new o.IncrementingTaskSyntaxError(`Second arg '${v.value}' should be one or more task`);const{ids:t,textID:e,textTask:r}=(0,c.idsController)(s,v.value);s.incrementTask(t,E),h.addFeedback(`${r} '${e}' incremented`).setView("specific",t).print();break}case l.Action.DELETE:{if(!(0,l.isTask)(v))throw new o.DeletingTaskSyntaxError(`Second arg '${v.value}' should be one or more task`);const{ids:t,textID:e,textTask:r}=(0,c.idsController)(s,v.value);if(Array.isArray(t)&&t.length>1)h.setView("full");else{let e;s.tasks.retrieveTask(t[0],(({parentTask:t})=>e=t)),h.setView(e?"specific":"full",e?e.id:void 0)}s.deleteTask(t),h.addFeedback(`${r} '${e}' deleted`).print();break}case l.Action.MOVE:{if(!(0,l.isTask)(v))throw new o.MovingTaskSyntaxError(`Second arg '${v.value}' should be one or more task id`);if(!(0,l.isTask)(S))throw new o.MovingTaskSyntaxError(`Third arg '${S.value}' should be one task id`);if(Array.isArray(S.value))throw new o.MovingTaskSyntaxError("Please provide only one destination task id");const{ids:t,textID:e,textTask:r}=(0,c.idsController)(s,v.value),a=S.value;s.moveTask(t,a),h.setView("specific",a),h.addFeedback(`${r} '${e}' moved to task n°${a}`).print();break}case l.Action.EXTRACT:{if(!(0,l.isTask)(v))throw new o.ExtractSyntaxError(`Second arg '${v.value}' should be one or more task id`);if(!(0,l.isText)(S))throw new o.ExtractSyntaxError(`Thrid arg '${S.value}' should be text`);const{tasks:t,textID:a,textTask:n}=(0,c.idsController)(s,v.value),h=S.value,u=i.StorageFactory.extract(h,s,t),g=r.PrinterFactory.create(e,d,u);g.setView("full"),g.addFeedback(`${n} '${a}' extracted to ${h}`).print();break}}}}},374:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isText=e.isAction=e.isTask=e.CliArgHandler=e.ValueFlag=e.OnOffFlag=e.BooleanFlag=e.Action=void 0;const r=s(564),a=s(37),i=s(310);var n,o,l,c;!function(t){t.CREATE_STORAGE="storage",t.CREATE_CONFIG="config",t.ADD_TASK="a",t.CHECK="c",t.RESET="r",t.DELETE="d",t.EDIT="e",t.INCREMENT="i",t.MOVE="mv",t.EXTRACT="x"}(n=e.Action||(e.Action={})),function(t){t.HELP="--help",t.VERSION="--version",t.RECURSIVE="-r",t.HIDE_TREE="--hide-tree",t.HIDE_TIMESTAMP="--hide-timestamp",t.HIDE_SUB_COUNTER="--hide-sub-counter"}(o=e.BooleanFlag||(e.BooleanFlag={})),function(t){t.HIDE_DESCRIPTION="--hide-description",t.SHOW_DESCRIPTION="--show-description",t.DONT_PRINT_AFTER="--no-print",t.DO_PRINT_AFTER="--print",t.CLEAR_BEFORE="--clear",t.DONT_CLEAR_BEFORE="--no-clear",t.HIDE_COMPLETED="--hide-completed",t.SHOW_COMPLETED="--show-completed"}(l=e.OnOffFlag||(e.OnOffFlag={})),function(t){t.STORAGE_FILE="--storage",t.DEPTH="--depth",t.GROUP_BY="--group",t.SORT="--sort",t.STATE="-s",t.DESCRIPTION="-d",t.TAG="-t"}(c=e.ValueFlag||(e.ValueFlag={})),e.CliArgHandler=class{constructor(){this.getFirstText=()=>{let t;return this.untreatedArgs.forEach(((e,s)=>{"text"===e.type&&void 0===t&&(t=e.value,this.untreatedArgs.splice(s,1))})),t},this.getPrinterConfig=()=>{const t=this.getBoolFlag(o.HIDE_TIMESTAMP),e=this.getBoolFlag(o.HIDE_TREE),s=this.getBoolFlag(o.HIDE_SUB_COUNTER),r=this.getValueFlag(c.DEPTH),a=this.getValueFlag(c.GROUP_BY),i=this.getValueFlag(c.SORT);return{hideDescription:this.handleOnOffFlags(l.HIDE_DESCRIPTION),hideTimestamp:t,hideSubCounter:s,hideTree:e,hideCompleted:this.handleOnOffFlags(l.HIDE_COMPLETED),shouldNotPrintAfter:this.handleOnOffFlags(l.DONT_PRINT_AFTER),clearBefore:this.handleOnOffFlags(l.CLEAR_BEFORE),depth:r,group:a,sort:i}},this.handleOnOffFlags=t=>{const e=[l.HIDE_DESCRIPTION,l.SHOW_DESCRIPTION,l.HIDE_COMPLETED,l.SHOW_COMPLETED,l.DONT_PRINT_AFTER,l.DO_PRINT_AFTER,l.CLEAR_BEFORE,l.DONT_CLEAR_BEFORE],s=e.findIndex((e=>e===t)),r=e[s+(s%2==0?1:-1)],a=this.extractOccurances((e=>"flag"===e.type&&(e.flagType===t||e.flagType===r)));if(void 0!==a)return a[a.length-1].arg.flagType===t},this.extractOccurances=t=>{const e=[];if(this.untreatedArgs.forEach(((s,r)=>{t(s,r)&&e.push({arg:s,index:r})})),0!==e.length){for(let t=e.length-1;t>=0;t--)this.untreatedArgs.splice(e[t].index,1);return e}},this.getDataAttributes=()=>({state:this.getValueFlag(c.STATE),description:this.getValueFlag(c.DESCRIPTION),priority:this.getPriority()}),this.rawParse=t=>{var e;let s=[];const a=t=>!isNaN(parseInt(t))&&!isNaN(parseFloat(t));for(let d=0;d<t.length;d++){const h=t[d],u=/\s/.test(h);if(h.includes(",")&&!u){const{subParsed:t,argType:e}=this.handleMultipleValuesType(h),r=t.map((t=>t.value));s.push({value:r,type:e})}else{const u=a(h),g=Object.values(n).includes(h),p=Object.values(o).includes(h),f=Object.values(l).includes(h),k=Object.values(c).includes(h),E=h===c.GROUP_BY,T=1===(null===(e=h.match(/^!+$/))||void 0===e?void 0:e.length)||!1;if(u)s.push({value:Number.parseInt(h),type:"task"});else if(g)s.push({value:h,type:"action"});else if(p)s.push({value:!0,type:"flag",flagType:h});else if(f)s.push({value:!0,type:"flag",flagType:h});else if(k){const e=t[d+1];let n;if(E&&!r.handledGroupings.includes(e))throw new i.GroupBySyntaxError(`'--group' following attribute should be from '${r.handledGroupings.map((t=>t))}'`);n=a(e)?Number.parseInt(e):e,s.push({value:n,type:"flag",flagType:h}),d++}else T?s.push({value:h.length,type:"priority"}):s.push({value:h,type:"text"})}}return s},this.handleMultipleValuesType=t=>{const e=t.split(","),s=this.rawParse(e);let r;return s.forEach((t=>{if(void 0===r)r=t.type;else if(t.type!==r)throw new a.MultipleValuesMismatchError(r,t.type)})),{subParsed:s,argType:r}},this.getBoolFlag=t=>{if(void 0!==this.extractOccurances((e=>"flag"===e.type&&e.flagType===t&&!0===e.value)))return!0},this.getValueFlag=t=>{const e=this.extractOccurances((e=>"flag"===e.type&&e.flagType===t&&void 0!==e.value));if(void 0!==e)return e[e.length-1].arg.value},this.getPriority=()=>{const t=this.extractOccurances((t=>"priority"===t.type&&void 0!==t.value));if(void 0!==t)return t[t.length-1].arg.value},this.untreatedArgs=this.rawParse(process.argv.slice(2)),this.flags={printing:this.getPrinterConfig(),dataAttributes:this.getDataAttributes(),storageLocation:this.getValueFlag(c.STORAGE_FILE),isRecursive:this.getBoolFlag(o.RECURSIVE),isHelpNeeded:this.getBoolFlag(o.HELP),isVersion:this.getBoolFlag(o.VERSION)},this.words=[...this.untreatedArgs];const{isHelpNeeded:t,isVersion:e}=this.flags;this.infos={isThereCliFlagCommand:t||e,isThereCLIArgs:this.words.length>0,isThereOnlyOneCLIArgs:1===this.words.length}}},e.isTask=t=>"task"===t.type,e.isAction=t=>"action"===t.type,e.isText=t=>"text"===t.type},506:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.idsController=void 0,e.idsController=(t,e)=>{const s=[];let r="",a="Task";const i=[];return Array.isArray(e)?(a="Tasks",e.forEach(((t,s)=>r+=`${t}${s!==e.length-1?",":""}`)),s.push(...e)):(a="Task",r=`${e}`,s.push(e)),s.map((e=>i.push(t.get(e)))),{ids:s,tasks:i,textID:r,textTask:a}}},583:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.MainController=void 0;const a=s(374),i=s(630),n=s(1),o=s(98),l=s(970),c=r(s(781)),d=s(310);e.MainController=class{constructor(){var t;this.handleFlagCommandArgs=()=>{const t=new i.Printer,{flags:e,infos:s,words:r}=this.argHandler,[n]=r,{isHelpNeeded:o,isVersion:d}=e,{isThereCliFlagCommand:h,isThereOnlyOneCLIArgs:u}=s;h&&(o?u&&(0,a.isAction)(n)?t.addFeedback(c.default.handleAction(n.value)).printFeedback():t.addFeedback(c.default.fullMan()).printFeedback():d&&t.addFeedback(c.default.version).printFeedback(),l.System.exit())},this.handleCreatingFiles=()=>{const{words:t}=this.argHandler,[e,s]=t,r=t.length>0&&(0,a.isAction)(e)&&e.value===a.Action.CREATE_STORAGE,h=t.length>0&&(0,a.isAction)(e)&&e.value===a.Action.CREATE_CONFIG;if(h||r){const t=new i.Printer;if(h){if(l.System.doesFileExists(o.DEFAULT_CONFIG_FILE_NAME))throw new d.ConfigError(`Config file '${o.DEFAULT_CONFIG_FILE_NAME}' already exists`);l.System.writeJSONFile(o.DEFAULT_CONFIG_FILE_NAME,o.DEFAULT_CONFIG_DATAS),t.addFeedback(`Config file '${o.DEFAULT_CONFIG_FILE_NAME}' created`)}else if(r){const e=(null==s?void 0:s.value)||n.DEFAULT_STORAGE_FILE_NAME;if(l.System.doesFileExists(e))throw new d.StorageError(`Storage file '${e}' already exists`);n.StorageFactory.init(e),t.addFeedback(`Storage file '${e}' created`)}t.printFeedback(),l.System.exit()}0===this.argHandler.words.length&&(l.System.doesFileExists(this.finalStorageLocation)||((new i.Printer).addFeedback("Go ahead and create a storage file !\n").addFeedback(c.default.getMan("createStorage")).printFeedback(),l.System.exit()))},this.argHandler=new a.CliArgHandler,this.handleFlagCommandArgs(),l.System.doesFileExists(o.DEFAULT_CONFIG_FILE_NAME)&&(this.config=new o.Config(o.DEFAULT_CONFIG_FILE_NAME)),this.finalStorageLocation=this.argHandler.flags.storageLocation||(null===(t=this.config)||void 0===t?void 0:t.storageFile)||n.DEFAULT_STORAGE_FILE_NAME,this.handleCreatingFiles(),l.System.doesFileExists(this.finalStorageLocation)&&(this.storage=new n.Storage(this.finalStorageLocation)),this.printer=i.PrinterFactory.create(this.argHandler,this.config,this.storage)}}},98:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Config=e.DEFAULT_CONFIG_DATAS=e.DEFAULT_CONFIG_FILE_NAME=void 0;const r=s(970),a=s(1);e.DEFAULT_CONFIG_FILE_NAME="task.config.json",e.DEFAULT_CONFIG_DATAS={storageFile:a.DEFAULT_STORAGE_FILE_NAME,group:"state",sort:"desc",shouldNotPrintAfter:!1,hideCompleted:!1,hideDescription:!1,hideTree:!1,clearBefore:!1},e.Config=class{constructor(t){this.relativePath=t;const e=r.System.readJSONFile(this.relativePath);Object.assign(this,e)}}},781:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(s(22)),i=r(s(598)),n=s(374),o=s(98),l=s(1),c=s(564);e.default=new class{constructor(){this.getMan=t=>this.makeMan(Object.assign(Object.assign({},this[t]),{footer:!0})),this.fullMan=()=>{let t=[];return["createStorage","createConfig","viewing","creatingTask","editing","incrementingTask","checkingTask","resettingTask","movingTask","deleting","extracting"].forEach((e=>{const s=this.makeMan(Object.assign(Object.assign({},this[e]),{footer:!1,globalArgs:!1}));t=[...t,...s,"","-----"]})),[...t,...this.globalArgs,...this.footer]},this.handleAction=t=>{let e=[];switch(t){case n.Action.CREATE_STORAGE:e=this.getMan("createStorage");break;case n.Action.CREATE_CONFIG:e=this.getMan("createConfig");break;case n.Action.ADD_TASK:e=this.getMan("creatingTask");break;case n.Action.DELETE:e=this.getMan("deleting");break;case n.Action.CHECK:e=this.getMan("checkingTask");break;case n.Action.RESET:e=this.getMan("resettingTask");break;case n.Action.INCREMENT:e=this.getMan("incrementingTask");break;case n.Action.EDIT:e=this.getMan("editing");break;case n.Action.MOVE:e=this.getMan("movingTask");break;case n.Action.EXTRACT:e=this.getMan("extracting")}return e},this.makeMan=t=>{const{bold:e,underline:s,italic:r}=a.default;let i=[];return t.title&&(i=[...i,s(t.title),""]),t.prototype&&(i=[...i,e(t.prototype),""]),t.argDef&&(i=[...i,...t.argDef]),t.furtherDescription&&(i=[...i,"",...t.furtherDescription]),t.examples&&(i=[...i,"",s("Examples :"),"",...t.examples]),t.globalArgs&&(i=[...i,...this.globalArgs]),i};const{bold:t,underline:e,italic:s}=a.default;this.globalArgs=["",e("Global arguments:"),"",s("They can either be passed by CLI arguments, or set through the config file"),"",`--storage <relative path> : The specific storage file to use if path different than default ${t(l.DEFAULT_STORAGE_FILE_NAME)}`,"--depth <n> : Print every tasks and also n levels of subtasks",`--group <(${c.handledGroupings.map((t=>t))})> : Group by attribute`,`--sort <(${c.handledOrder.map((t=>t))})> : Sort order`,`--hide-description : Hide tasks descriptions ; ${t("'hideDescription' in the config file")}`,"--show-description : Bypass the 'hideDescription' argument in config file",`--hide-tree : Hide tree branches ; ${t("'hideTree' in the config file")}`,`--hide-timestamp : No timestamp ; ${t("'hideTimestamp' in the config file")}`,`--hide-completed : Don't display completed tasks ; ${t("'hideCompleted' in the config file")}`,"--show-completed : Bypass the 'shouldNotPrintAfter' argument in config file","--hide-sub-counter : No subtask counter in parent task",`--no-print : Prevent printing your tasks after having ran your command ; ${t("'shouldNotPrintAfter' in the config file")}`,"--print : Bypass the 'shouldNotPrintAfter' argument in config file",`--clear : Clear the terminal before printing ; ${t("'clearBefore' in the config file")}`,"--no-clear : Bypass the 'clearBefore' argument in the config file"],this.footer=["","-----",`${t(i.default.name)}: ${i.default.description}`,`Version: ${t(i.default.version)}`,`More informations and examples at ${t(i.default.repository.url)}`],this.version=[`${i.default.version}`],this.createStorage={title:"Creating storage file",prototype:"task storage [<relative path>]",argDef:[`<relative path> : If you want to change the path, default ${t(l.DEFAULT_STORAGE_FILE_NAME)}`]},this.createConfig={title:"Creating the config file",prototype:"task config",furtherDescription:[`It will create a ${t(o.DEFAULT_CONFIG_FILE_NAME)}`,`You don't need to have a configuration file, it's used to pass default ${t("global arguments")} to the CLI, see section below.`],globalArgs:!0},this.viewing={title:"Viewing",prototype:"task [<task(s)>] [global args]",argDef:["<task(s)> : The id of the task you want to display, you can pass multiple by s