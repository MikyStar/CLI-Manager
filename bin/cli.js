#!/usr/bin/env node

(()=>{"use strict";var t={142:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(595),i=s(230),o=s(175),n=s(630),l=s(970),c=r(s(781)),d=s(583),h=s(310),u=s(219),g=s(1),p=s(506);try{const t=new d.MainController,{argHandler:e,storage:s,config:r,printer:u}=t,{flags:f,words:k}=e,[E,T,y,...b]=k,{dataAttributes:m,isHelpNeeded:v,isVersion:A,isRecursive:S}=f,{state:_,description:F,priority:w}=m,x=v||A,D=k.length>0,O=1===k.length;if(D||(x?v?u.addFeedback(c.default.fullMan()).printFeedback():A&&u.addFeedback(c.default.version).printFeedback():u.setView("full").printView(),l.System.exit()),O){if((0,a.isTask)(E)){const t=E.value;u.setView("specific",t).printView()}else(0,a.isAction)(E)&&v&&u.addFeedback(c.default.handleAction(E.value)).printFeedback();l.System.exit()}if((0,a.isAction)(E)){switch(E.value){case a.Action.ADD_TASK:{let t;if(O)t=i.Prompt.addTask(s,r);else{const r=new o.Task({name:e.getFirstText(),state:_||s.meta.states[0].name,description:F,priority:w});let i;if((0,a.isTask)(T)){const t=T.value;i=t,u.setView("specific",t)}else u.setView("full");t=s.addTask(r,i)}u.addFeedback(`Task n°${t} added`).print();break}case a.Action.EDIT:{if(!(0,a.isTask)(T))throw new h.EditingSyntaxError("Your second arguments should be one or more tasks id join by ',' or a board name");const t=e.getFirstText();if((0,a.isTask)(T)){const e={name:t,state:_,description:F,priority:w};t||delete e.name,_||delete e.state,F||delete e.description,w||delete e.priority;const{ids:r,textID:a,textTask:i}=(0,p.idsController)(s,T.value);s.editTask(r,e,S),u.addFeedback(`${i} '${a}' edited`).setView("specific",r)}u.print();break}case a.Action.CHECK:{if(!(0,a.isTask)(T))throw new h.CheckingTaskSyntaxError("Your second arguments should be a number or numbers join by ','");const{ids:t,textID:e,textTask:r}=(0,p.idsController)(s,T.value),i=s.meta.states[s.meta.states.length-1].name;s.editTask(t,{state:i},S),u.addFeedback(`${r} '${e}' checked`).setView("specific",t).print();break}case a.Action.INCREMENT:{if(!(0,a.isTask)(T))throw new h.IncrementingTaskSyntaxError(`Second arg '${T.value}' should be one or more task`);const{ids:t,textID:e,textTask:r}=(0,p.idsController)(s,T.value);s.incrementTask(t,S),u.addFeedback(`${r} '${e}' incremented`).setView("specific",t).print();break}case a.Action.DELETE:{if(!(0,a.isTask)(T))throw new h.DeletingTaskSyntaxError(`Second arg '${T.value}' should be one or more task`);const{ids:t,textID:e,textTask:r}=(0,p.idsController)(s,T.value);if(Array.isArray(t)&&t.length>1)u.setView("full");else{let e;s.tasks.retrieveTask(t[0],(({parentTask:t})=>e=t)),u.setView(e?"specific":"full",e?e.id:void 0)}s.deleteTask(t),u.addFeedback(`${r} '${e}' deleted`).print();break}case a.Action.MOVE:{if(!(0,a.isTask)(T))throw new h.MovingTaskSyntaxError(`Second arg '${T.value}' should be one or more task id`);if(!(0,a.isTask)(y))throw new h.MovingTaskSyntaxError(`Third arg '${y.value}' should be one task id`);if(Array.isArray(y.value))throw new h.MovingTaskSyntaxError("Please provide only one destination task id");const{ids:t,textID:e,textTask:r}=(0,p.idsController)(s,T.value),i=y.value;s.moveTask(t,i),u.setView("specific",i),u.addFeedback(`${r} '${e}' moved to task n°${i}`).print();break}case a.Action.EXTRACT:{if(!(0,a.isTask)(T))throw new h.ExtractSyntaxError(`Second arg '${T.value}' should be one or more task id`);if(!(0,a.isText)(y))throw new h.ExtractSyntaxError(`Thrid arg '${y.value}' should be text`);const{tasks:t,textID:i,textTask:o}=(0,p.idsController)(s,T.value),l=y.value,c=g.StorageFactory.extract(l,s,t),d=n.PrinterFactory.create(e,r,c);d.setView("full"),d.addFeedback(`${o} '${i}' extracted to ${l}`).print();break}}l.System.exit()}}catch(t){t instanceof u.CatchableError?t instanceof h.CLISyntaxError?((0,n.printError)(t.message),(0,n.printMessage)(c.default.getMan(t.manEntry))):(0,n.printError)(t.message):console.error(t),l.System.exit(-1)}},506:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.idsController=void 0,e.idsController=(t,e)=>{const s=[];let r="",a="Task";const i=[];return Array.isArray(e)?(a="Tasks",e.forEach(((t,s)=>r+=`${t}${s!==e.length-1?",":""}`)),s.push(...e)):(a="Task",r=`${e}`,s.push(e)),s.map((e=>i.push(t.get(e)))),{ids:s,tasks:i,textID:r,textTask:a}}},583:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MainController=void 0;const r=s(595),a=s(630),i=s(1),o=s(98),n=s(970),l=s(310);e.MainController=class{constructor(){var t;this.handleCreatingFiles=()=>{const{words:t}=this.argHandler,[e,s]=t,c=t.length>0&&(0,r.isAction)(e)&&e.value===r.Action.CREATE_STORAGE,d=t.length>0&&(0,r.isAction)(e)&&e.value===r.Action.CREATE_CONFIG;if(d||c){const t=new a.Printer;if(d){if(n.System.doesFileExists(o.DEFAULT_CONFIG_FILE_NAME))throw new l.ConfigError(`Config file '${o.DEFAULT_CONFIG_FILE_NAME}' already exists`);n.System.writeJSONFile(o.DEFAULT_CONFIG_FILE_NAME,o.DEFAULT_CONFIG_DATAS),t.addFeedback(`Config file '${o.DEFAULT_CONFIG_FILE_NAME}' created`)}else if(c){const e=(null==s?void 0:s.value)||i.DEFAULT_STORAGE_FILE_NAME;if(n.System.doesFileExists(e))throw new l.StorageError(`Storage file '${e}' already exists`);i.StorageFactory.init(e),t.addFeedback(`Storage file '${e}' created`)}t.printFeedback(),n.System.exit()}},this.argHandler=new r.CliArgHandler;const{flags:e}=this.argHandler,{storageLocation:s}=e;n.System.doesFileExists(o.DEFAULT_CONFIG_FILE_NAME)&&(this.config=new o.Config(o.DEFAULT_CONFIG_FILE_NAME)),this.handleCreatingFiles();const c=s||(null===(t=this.config)||void 0===t?void 0:t.storageFile)||i.DEFAULT_STORAGE_FILE_NAME;if(!n.System.doesFileExists(c))throw new l.StorageError(`Can't find the task storage file '${c}'`);this.storage=new i.Storage(c),this.printer=a.PrinterFactory.create(this.argHandler,this.config,this.storage)}}},595:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isText=e.isAction=e.isTask=e.CliArgHandler=e.ValueFlag=e.BooleanFlag=e.Action=void 0;const r=s(564),a=s(37),i=s(310);var o,n,l;!function(t){t.CREATE_STORAGE="storage",t.CREATE_CONFIG="config",t.ADD_TASK="a",t.CHECK="c",t.DELETE="d",t.EDIT="e",t.INCREMENT="i",t.MOVE="mv",t.EXTRACT="x"}(o=e.Action||(e.Action={})),function(t){t.HELP="--help",t.VERSION="--version",t.RECURSIVE="-r",t.HIDE_DESCRIPTION="--hide-description",t.SHOW_DESCRIPTION="--show-description",t.HIDE_TREE="--hide-tree",t.HIDE_TIMESTAMP="--hide-timestamp",t.HIDE_SUB_COUNTER="--hide-sub-counter",t.DONT_PRINT_AFTER="--no-print",t.DO_ACTUALLY_PRINT_AFTER="--do-print",t.DO_PRINT_AFTER="--print",t.HIDE_COMPLETED="--hide-completed",t.SHOW_COMPLETED="--show-completed"}(n=e.BooleanFlag||(e.BooleanFlag={})),function(t){t.STORAGE_FILE="--storage",t.DEPTH="--depth",t.GROUP_BY="--group",t.SORT="--sort",t.STATE="-s",t.DESCRIPTION="-d",t.TAG="-t"}(l=e.ValueFlag||(e.ValueFlag={})),e.CliArgHandler=class{constructor(){this.getFirstText=()=>{let t;return this.untreatedArgs.forEach(((e,s)=>{"text"===e.type&&void 0===t&&(t=e.value,this.untreatedArgs.splice(s,1))})),t},this.getPrinterConfig=()=>{const t=this.getBoolFlag(n.HIDE_TIMESTAMP),e=this.getBoolFlag(n.HIDE_TREE),s=this.getBoolFlag(n.HIDE_SUB_COUNTER),r=this.getValueFlag(l.DEPTH),a=this.getValueFlag(l.GROUP_BY),i=this.getValueFlag(l.SORT),o=this.getBoolFlag(n.HIDE_DESCRIPTION),c=this.getBoolFlag(n.SHOW_DESCRIPTION),d=this.getBoolFlag(n.HIDE_COMPLETED),h=this.getBoolFlag(n.SHOW_COMPLETED),u=this.getBoolFlag(n.DONT_PRINT_AFTER),g=this.getBoolFlag(n.DO_PRINT_AFTER);return{hideDescription:o||(c?!c:void 0),hideTimestamp:t,hideSubCounter:s,hideTree:e,hideCompleted:d||(h?!h:void 0),shouldNotPrintAfter:u||(g?!g:void 0),depth:r,group:a,sort:i}},this.getDataAttributes=()=>({state:this.getValueFlag(l.STATE),description:this.getValueFlag(l.DESCRIPTION),priority:this.getPriority()}),this.rawParse=t=>{var e;let s=[];const a=t=>!isNaN(parseInt(t))&&!isNaN(parseFloat(t));for(let c=0;c<t.length;c++){const d=t[c],h=/\s/.test(d);if(d.includes(",")&&!h){const{subParsed:t,argType:e}=this.handleMultipleValuesType(d),r=t.map((t=>t.value));s.push({value:r,type:e})}else{const h=a(d),u=Object.values(o).includes(d),g=Object.values(n).includes(d),p=Object.values(l).includes(d),f=d===l.GROUP_BY,k=1===(null===(e=d.match(/^!+$/))||void 0===e?void 0:e.length)||!1;if(h)s.push({value:Number.parseInt(d),type:"task"});else if(u)s.push({value:d,type:"action"});else if(g)s.push({value:!0,type:"flag",flagType:d});else if(p){const e=t[c+1];let o;if(f&&!r.handledGroupings.includes(e))throw new i.GroupBySyntaxError(`'--group' following attribute should be from '${r.handledGroupings.map((t=>t))}'`);o=a(e)?Number.parseInt(e):e,s.push({value:o,type:"flag",flagType:d}),c++}else k?s.push({value:d.length,type:"priority"}):s.push({value:d,type:"text"})}}return s},this.handleMultipleValuesType=t=>{const e=t.split(","),s=this.rawParse(e);let r;return s.forEach((t=>{if(void 0===r)r=t.type;else if(t.type!==r)throw new a.MultipleValuesMismatchError(r,t.type)})),{subParsed:s,argType:r}},this.getBoolFlag=t=>{const e=this.untreatedArgs.findIndex((e=>"flag"===e.type&&e.flagType===t&&!0===e.value));return-1===e?void 0:(this.untreatedArgs.splice(e,1),!0)},this.getValueFlag=t=>{const e=this.untreatedArgs.findIndex((e=>"flag"===e.type&&e.flagType===t&&void 0!==e.value));if(-1!==e){const t=this.untreatedArgs[e].value;return this.untreatedArgs.splice(e,1),t}},this.getPriority=()=>{const t=this.untreatedArgs.findIndex((t=>"priority"===t.type&&void 0!==t.value));if(-1!==t){const e=this.untreatedArgs[t].value;return this.untreatedArgs.splice(t,1),e}},this.untreatedArgs=this.rawParse(process.argv.slice(2)),this.flags={printing:this.getPrinterConfig(),dataAttributes:this.getDataAttributes(),storageLocation:this.getValueFlag(l.STORAGE_FILE),isRecursive:this.getBoolFlag(n.RECURSIVE),isHelpNeeded:this.getBoolFlag(n.HELP),isVersion:this.getBoolFlag(n.VERSION)},this.words=[...this.untreatedArgs]}},e.isTask=t=>"task"===t.type,e.isAction=t=>"action"===t.type,e.isText=t=>"text"===t.type},98:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Config=e.DEFAULT_CONFIG_DATAS=e.DEFAULT_CONFIG_FILE_NAME=void 0;const r=s(970),a=s(1);e.DEFAULT_CONFIG_FILE_NAME="task.config.json",e.DEFAULT_CONFIG_DATAS={storageFile:a.DEFAULT_STORAGE_FILE_NAME,group:"state",sort:"desc",shouldNotPrintAfter:!1,hideCompleted:!1,hideDescription:!1,hideTree:!1},e.Config=class{constructor(t){this.relativePath=t;const e=r.System.readJSONFile(this.relativePath);Object.assign(this,e)}}},781:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(22),i=r(s(598)),o=s(595),n=s(98),l=s(1),c=s(564);e.default=new class{constructor(){this.getMan=t=>this.makeMan(Object.assign(Object.assign({},this[t]),{footer:!0})),this.fullMan=()=>{let t=[];return["createStorage","createConfig","viewing","creatingTask","editing","incrementingTask","checkingTask","movingTask","deleting","extracting"].forEach((e=>{const s=this.makeMan(Object.assign(Object.assign({},this[e]),{footer:!1,globalArgs:!1}));t=[...t,...s,"","-----"]})),[...t,...this.globalArgs,...this.footer]},this.handleAction=t=>{let e=[];switch(t){case o.Action.CREATE_STORAGE:e=this.getMan("createStorage");break;case o.Action.CREATE_CONFIG:e=this.getMan("createConfig");break;case o.Action.ADD_TASK:e=this.getMan("creatingTask");break;case o.Action.DELETE:e=this.getMan("deleting");break;case o.Action.CHECK:e=this.getMan("checkingTask");break;case o.Action.INCREMENT:e=this.getMan("incrementingTask");break;case o.Action.EDIT:e=this.getMan("editing");break;case o.Action.MOVE:e=this.getMan("movingTask")}return e},this.makeMan=t=>{let e=[];return t.title&&(e=[...e,(0,a.underline)(t.title),""]),t.prototype&&(e=[...e,(0,a.bold)(t.prototype),""]),t.argDef&&(e=[...e,...t.argDef]),t.furtherDescription&&(e=[...e,"",...t.furtherDescription]),t.examples&&(e=[...e,"",(0,a.underline)("Examples :"),"",...t.examples]),t.globalArgs&&(e=[...e,...this.globalArgs]),e},this.globalArgs=["",(0,a.underline)("Global arguments:"),"",(0,a.italic)("They can either be passed by CLI arguments, or set through the config file"),"",`--storage <relative path> : The specific storage file to use if path different than default ${(0,a.bold)(l.DEFAULT_STORAGE_FILE_NAME)}`,"--depth <n> : Print every tasks and also n levels of subtasks",`--group <(${c.handledGroupings.map((t=>t))})> : Group by attribute`,`--sort <(${c.handledOrder.map((t=>t))})> : Sort order`,`--hide-description : Hide tasks descriptions ; ${(0,a.bold)("'hideDescription' in the config file")}`,"--show-description : Bypass the 'hideDescription' argument in config file",`--hide-tree : Hide tree branches ; ${(0,a.bold)("'hideTree' in the config file")}`,`--hide-timestamp : No timestamp ; ${(0,a.bold)("'hideTimestamp' in the config file")}`,`--hide-completed : Don't display completed tasks ; ${(0,a.bold)("'hideCompleted' in the config file")}`,"--show-completed : Bypass the 'shouldNotPrintAfter' argument in config file","--hide-sub-counter : No subtask counter in parent task",`--no-print : Prevent printing your tasks after having ran your command ; ${(0,a.bold)("'shouldNotPrintAfter' in the config file")}`,"--print : Bypass the 'shouldNotPrintAfter' argument in config file"],this.footer=["","-----",`${(0,a.bold)(i.default.name)}: ${i.default.description}`,`Version: ${(0,a.bold)(i.default.version)}`,`More informations and examples at ${(0,a.bold)(i.default.repository.url)}`],this.version=[`${i.default.version}`],this.createStorage={title:"Creating storage file",prototype:"task storage [<relative path>]",argDef:[`<relative path> : If you want to change the path, default ${(0,a.bold)(l.DEFAULT_STORAGE_FILE_NAME)}`]},this.createConfig={title:"Creating the config file",prototype:"task config",furtherDescription:[`It will create a ${(0,a.bold)(n.DEFAULT_CONFIG_FILE_NAME)}`,`You don't need to have a configuration file, it's used to pass default ${(0,a.bold)("global arguments")} to the CLI, see section below.`],globalArgs:!0},this.viewing={title:"Viewing",prototype:"task [<task(s)>] [global args]",argDef:["<task(s)> : The id of the task you want to display, you can pass multiple by separating the ids by ',' without space"],globalArgs:!0},this.creatingTask={title:"Creating a task",prototype:"task a [<task>] [<task name>] [-d <description>] [-s <state>] [global args]",argDef:["<task> : Task id uppon which you want to add a child subtask","<name> : Task name","-d <description> : Task description","-s <state> : Task state defined by the config file"],furtherDescription:["If no args are provided after 'a' you will enter interactive mode to create your task"],globalArgs:!0},this.editing={title:"Editing",prototype:"task e <task(s)> [<new name>] [-d <description>] [-s <state>] [global args]",argDef:["<task(s)> : The id of the task you want to edit, you can pass multiple by separating the ids by ',' without space","<new name> : Edit task name","-d <description> : Edit task description","-s <state> : Edit task state defined by the config file"],furtherDescription:["If no args are provided after 'e' you will enter interactive mode to edit your task"],globalArgs:!0},this.checkingTask={title:"Checking task",prototype:"task c <task(s)> [-r] [global args]",argDef:["<task(s)> : The id of the task you want to change, you can pass multiple by separating the ids by ',' without space","-r: Also update target task's subtasks, 'recursive'"],furtherDescription:["Will put tasks to the final state (last index in config file)"],globalArgs:!0},this.incrementingTask={title:"Incrementing task",prototype:"task i <task(s)> [-r] [global args]",argDef:["<task(s)> : The id of the task you want to increment, you can pass multiple by separating the ids by ',' without space","-r: Also update target task's subtasks, 'recursive'"],furtherDescription:["Will put tasks to the next state (next index in config file)"],globalArgs:!0},this.movingTask={title:"Moving task",prototype:"task mv <target task(s)> [<task id dest>] [global args]",argDef:["<target task(s)> : The id of the task you want to move, you can pass multiple by separating the ids by ',' without space","<task id dest> : The id of the target task"],globalArgs:!0},this.deleting={title:"Deleting",prototype:"task d <task(s)>",argDef:["<task(s)> : The id of the task you want to remove, you can pass multiple by separating the ids by ',' without space"],globalArgs:!0},this.extracting={title:"Extracting",prototype:"task x <task(s)> <relative path>",argDef:["<task(s)> : The id of the task you want to extract, you can pass multiple by separating the ids by ',' without space","<relative path> : Path of the new storage file"],globalArgs:!0}}}},630:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.printError=e.printMessage=e.PrinterFactory=e.Printer=void 0;const a=r(s(22)),i=s(564),o=s(1);class n{constructor(t,s){this.setView=(t,e)=>(this.viewParams={view:t,target:e},this),this.addFeedback=t=>{const e=Array.isArray(t)?t:[t];return this.feedback=[...this.feedback,...e],this},this.cloneStorage=()=>{const{group:t,sort:e}=this.config,s=new o.Storage(this.storage.relativePath);return t&&(s.group(t),e&&s.order(e)),s},this.getSpecificView=t=>{let e=[];const s=Array.isArray(t)?t:[t],r=new i.TaskList;return s.forEach(((t,a)=>{this.cloneStorage().tasks.retrieveTask(t,(({task:t})=>{r.push(t),e=[...e,...t.stringify(this.storage.meta.states,Object.assign(Object.assign({},this.config),{hideCompleted:!1})),""],a!==s.length-1?e.push(this.separator("-"),""):e.push(r.getStats(this.storage.meta),"")}))})),e=[...e,...this.getFileStats()],e},this.getFullView=()=>{let t=[];return this.cloneStorage().tasks.forEach((e=>t.push(...e.stringify(this.storage.meta.states,this.config)))),t.push("",...this.getFileStats()),t},this.getView=()=>{if(!this.viewParams)return[];switch(this.viewParams.view){case"full":return this.getFullView();case"specific":return this.getSpecificView(this.viewParams.target)}},this.print=()=>{let t=[];if(t.push(this.charAccrossScreen("-"),""),this.config.shouldNotPrintAfter){if(0===this.feedback.length)return;t=[...t,...this.feedback,this.charAccrossScreen("-")]}else{if(0===this.feedback.length&&this.viewParams)return;t=[...t,...this.getView(),this.charAccrossScreen("-"),"",...this.feedback]}(0,e.printMessage)(t)},this.printView=()=>{const t=[this.charAccrossScreen("-"),"",...this.getView(),"",this.charAccrossScreen("-")];(0,e.printMessage)(t)},this.printFeedback=()=>(0,e.printMessage)(["",...this.feedback]),this.getFileStats=()=>{const t=a.default.bold.underline(this.storage.relativePath),e=this.storage.tasks.getStats(this.storage.meta);return[this.separator("-"),""," "+t,"",e,""]},this.charAccrossScreen=t=>{let e="";for(let s=0;s<process.stdout.columns-2;s++)e+=t;return e+" "},this.separator=t=>{let e="";for(let s=0;s<process.stdout.columns/10;s++)e+=t;return e},this.wrapText=(t,e=0,s=0)=>{let r="";for(let t=0;t<e;t++)r+="    ";for(let t=0;t<s;t++)r+=" ";process.stdout.columns,r.length},this.feedback=[],this.config=s,this.storage=t}}e.Printer=n,e.PrinterFactory={create:(t,e,s)=>{const{flags:r}=t,{printing:a}=r,i=Object.assign({},e);for(const[t,e]of Object.entries(a))void 0!==a[t]&&(i[t]=e);return new n(s,i)}},e.printMessage=(t,e)=>{""!==t&&t!==[]&&(t=Array.isArray(t)?t:[t],console.log(""),t.forEach((t=>{let s=" "+t;s=e?a.default[e](s):s,console.log(s)})),console.log(""))},e.printError=t=>(0,e.printMessage)(t,"red")},230:function(t,e,s){var r=this&&this.__awaiter||function(t,e,s,r){return new(s||(s=Promise))((function(a,i){function o(t){try{l(r.next(t))}catch(t){i(t)}}function n(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?a(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(o,n)}l((r=r.apply(t,e||[])).next())}))},a=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Prompt=void 0;const i=a(s(650)),o=s(175);!function(t){t.addTask=(t,e)=>r(this,void 0,void 0,(function*(){let e=[];t.meta.states.forEach((t=>{return e.push({title:s=t.name,value:s});var s}));try{const s=yield(0,i.default)([{type:"text",name:"name",message:"Task name"},{type:"select",name:"state",message:"State",choices:e},{type:"text",name:"description",message:"Description"}]),r=new o.Task({name:s.name,state:s.state,description:s.description});return t.addTask(r)}catch(t){console.warn("No task added")}}))}(e.Prompt||(e.Prompt={}))},1:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.StorageFactory=e.Storage=e.DEFAULT_STORAGE_DATAS=e.DEFAULT_STORAGE_FILE_NAME=void 0;const r=s(564),a=s(970),i=s(703),o=s(647);e.DEFAULT_STORAGE_FILE_NAME="tasks.json",e.DEFAULT_STORAGE_DATAS={meta:{states:[{name:"todo",hexColor:"#ff8f00",icon:"☐"},{name:"wip",hexColor:"#ab47bc",icon:"✹"},{name:"done",hexColor:"#66bb6a",icon:"✔"}]},datas:[{name:"Add more stuff",description:"There's a lot of things to do",state:"todo",id:0}]};class n{constructor(t){this.addTask=(t,e)=>{const s=this.tasks.addTask(t,e);return this.save(),s},this.editTask=(t,e,s)=>{const r=this.tasks.editTask(t,e,s);return this.save(),r},this.incrementTask=(t,e)=>{const s=this.tasks.incrementTask(t,this.meta,e);return this.save(),s},this.deleteTask=t=>{const e=this.tasks.deleteTask(t);return this.save(),e},this.moveTask=(t,e)=>{const s=this.tasks.moveTask(t,e);return this.save(),s},this.group=(t="state")=>this.tasks.group(t,this.meta),this.order=t=>"desc"===t&&this.tasks.reverse(),this.get=t=>{let e;if(this.tasks.retrieveTask(t,(({task:t})=>e=t)),void 0===e)throw new o.TaskNotFoundError(t);return e},this.save=()=>a.System.writeJSONFile(this.relativePath,{meta:this.meta,datas:this.tasks}),this.relativePath=t;const{meta:e,datas:s}=a.System.readJSONFile(this.relativePath);this.tasks=new r.TaskList(s),this.meta=e}}e.Storage=n,e.StorageFactory={init:t=>{if(a.System.doesFileExists(t))throw new i.FileAlreadyExistsError(t);return a.System.writeJSONFile(t,e.DEFAULT_STORAGE_DATAS),new n(t)},extract:(t,e,s)=>{if(a.System.doesFileExists(t))throw new i.FileAlreadyExistsError(t);const r={meta:e.meta,datas:s};return a.System.writeJSONFile(t,r),s.forEach((t=>e.deleteTask([t.id]))),new n(t)}}},970:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.System=void 0;const a=r(s(147)),i=r(s(17)),o=s(703);var n;(n=e.System||(e.System={})).exit=(t=0)=>process.exit(t),n.getAbsolutePath=t=>i.default.join(process.cwd(),t),n.readJSONFile=t=>{let e,s={};try{e=a.default.readFileSync(n.getAbsolutePath(t),{encoding:"utf8",flag:"r"})}catch(e){throw new o.FileNotFoundError(t,e)}try{s=JSON.parse(e)}catch(e){throw new o.JSONParseError(t,e)}return s},n.doesFileExists=t=>a.default.existsSync(n.getAbsolutePath(t))||!1,n.writeJSONFile=(t,e)=>{try{a.default.writeFileSync(n.getAbsolutePath(t),JSON.stringify(e,null,4))}catch(e){throw new o.SaveFileError(t,e)}}},175:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Task=e.TIMESTAMP_FORMAT=void 0;const a=r(s(22));e.TIMESTAMP_FORMAT="DD/MM/YYYY";class i{constructor(t){this.straightTask=()=>{let t=[];return this.subtasks&&0!==this.subtasks.length?(this.subtasks.forEach((e=>{const s=e.straightTask();t.push(...s)})),t.push(this),t):(t.push(this),t)},this.stringify=(t,e)=>{const s="    ",r=1,i={node:"├── ",lastNode:"└── ",branch:"│   "},o={node:a.default.grey(i.node),lastNode:a.default.grey(i.lastNode),branch:a.default.grey(i.branch)},{parentIndent:n,subTaskLevel:l=r,isSubTask:c,isLastChild:d,hideDescription:h,depth:u,isLastParent:g,hideTimestamp:p,hideSubCounter:f,hideCompleted:k,hideTree:E}=e;let T=[],y=n||"";const b=this.state===t[t.length-1].name,m=t.filter((t=>this.state===t.name))[0],v=a.default.hex(m.hexColor)(`${this.id}.`);if(k&&b)return T;c&&(E?y+=s:(function(){const t=y.lastIndexOf(o.node);t>=0&&t+o.branch.length>=y.length&&(y=y.substring(0,t)+o.branch)}(),g&&(y=y.split(i.lastNode).join(s)),y+=d?o.lastNode:o.node));const A=a.default.hex(m.hexColor)(m.icon),S=b?a.default.strikethrough.grey(this.name):this.name,_=this.priority?a.default.bold.red(" "+(()=>{let t="";for(let e=0;e<this.priority;e++)t+="!";return t})()):"",F=`${v}\t${y}${A}`+_+` ${S}`;if(T.push(F),!h){const t=()=>{if(!this.description)return[];let t=[];return this.description.split("\n").forEach((e=>{e=b?a.default.grey.strikethrough(e):a.default.dim(e);const r=E?s:o.branch,n=`\t${(()=>{let t=y;const{node:e,branch:r,lastNode:a}=i;let o,n;return y.match(e)?(o=e,n=r):y.match(a)&&(o=a,n=s),!E&&o&&n&&(t=y.split(o).join(n)),t})()}${r}  ${e}`;t.push(n)})),t};T=[...T,...t()]}return this.subtasks&&0!==this.subtasks.length?(this.subtasks.forEach(((s,r)=>{if(!(void 0!==u&&l>=u+1)){const a=r===this.subtasks.length-1,i=Object.assign(Object.assign({},e),{subTaskLevel:l+1,parentIndent:y,isLastChild:a,isSubTask:!0,isLastParent:d}),o=s.stringify(t,i);T=[...T,...o]}})),T):T},Object.assign(this,t),t.subtasks&&0!==t.subtasks.length?this.subtasks=t.subtasks.map((t=>new i(t))):delete this.subtasks}}e.Task=i},564:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.TaskList=e.handledOrder=e.handledGroupings=void 0;const a=r(s(22)),i=r(s(245)),o=s(175),n=s(647);e.handledGroupings=["state","priority","id"],e.handledOrder=["asc","desc"],e.TaskList=class extends Array{constructor(t){super(),this.remove=t=>{const e=this.allIDs.findIndex((e=>e===t.id));this.allIDs.splice(e,1);let s=this.indexOf(t);if(s>-1){const e=this.length-1;for(;s<e;)this[s]=this[s+1],++s;return this.length=e,[t]}return[]},this.push=(...t)=>(t.forEach((t=>{t.straightTask().map((t=>t.id)).forEach((t=>{if(this.allIDs.includes(t))throw new n.TaskIdDuplicatedError(t);this.allIDs.push(t)})),super.push(t)})),this.length),this.addTask=(t,e)=>{const s=t.id&&!this.allIDs.includes(t.id)?t.id:(()=>{if(Math.max(...this.allIDs)===this.allIDs.length-1)return this.allIDs.length;{let t=0;for(;this.allIDs.includes(t);)t++;return t}})();return t.id=s,t.timestamp=(0,i.default)().format(o.TIMESTAMP_FORMAT),e?this.retrieveTask(e,(({task:e})=>{void 0===e.subtasks?e.subtasks=[t]:e.subtasks=[...e.subtasks,t],this.allIDs.push(s)})):this.push(t),s},this.editTask=(t,e,s)=>(t.forEach((t=>{this.retrieveTask(t,(({task:t})=>{const r=s?t.straightTask():[t];for(const[t,s]of Object.entries(e))r.forEach((e=>e[t]=s))}))})),t),this.incrementTask=(t,e,s)=>{const{states:r}=e,a=r.map((t=>t.name)),i=t=>{const e=a.indexOf(t.state);if(-1===e)throw new n.TaskStateUnknownError(t.id,t.state);if(e===a.length-1)throw new n.NoFurtherStateError(t.id);this.editTask([t.id],{state:a[e+1]},s)};return t.forEach((t=>{this.retrieveTask(t,(({task:t})=>{i(t)}))})),t},this.deleteTask=t=>(t.forEach((t=>{let e=!1;if(this.forEach(((s,r)=>{if(s.id===t)e=!0,this.remove(s);else if(Array.isArray(s.subtasks)&&0!==s.subtasks.length){const r=(a,i)=>{a.id===t?(e=!0,s.subtasks.splice(i,1)):Array.isArray(a.subtasks)&&0!==a.subtasks.length&&a.subtasks.forEach(r)};s.subtasks.forEach(r)}})),!e)throw new n.TaskNotFoundError(t)})),t),this.moveTask=(t,e)=>(t.forEach((t=>this.retrieveTask(t,(({task:s})=>{this.deleteTask([t]),this.addTask(s,e)})))),t),this.retrieveTask=(t,e)=>{let s,r=!1;const a=(i,o)=>{if(i.id===t)return r=!0,e({task:i,taskIndex:o,parentTask:s});Array.isArray(i.subtasks)?(s=i,i.subtasks.forEach(a)):s=void 0};if(this.forEach(a),!r)throw new n.TaskNotFoundError(t)},this.search=(t,e)=>{const s=[];return this.forEach((r=>{r.straightTask().forEach((r=>{r[t]===e&&s.push(r)}))})),s},this.countTaskAndSub=()=>{let t=0;return this.forEach((function e(s){t++,Array.isArray(s.subtasks)&&s.subtasks.forEach(e)})),t},this.getStats=t=>{let e="";const s=this.countTaskAndSub(),{states:r}=t;return r.forEach(((t,i)=>{const o=this.search("state",t.name).length,n=o/s*100;0!==i&&i!==r.length&&(e+=" ► ");const l=`${o} ${t.name} (${n.toFixed(0)}%)`;e+=a.default.hex(t.hexColor)(l)})),e+=` ❯ ${s}`,e},this.group=(t,e)=>{let s=(t,e)=>0;switch(t){case"state":{const t=e.states.map((t=>t.name));s=(e,s)=>e.state===s.state?0:t.indexOf(e.state)<t.indexOf(s.state)?-1:1;break}case"priority":s=(t,e)=>void 0!==t.priority&&void 0!==e.priority?t.priority===e.priority?0:t.priority<e.priority?-1:1:void 0===t.priority&&void 0!==e.priority?-1:void 0!==t.priority&&void 0===e.priority?1:0;break;case"id":s=(t,e)=>{if(t.id===e.id)throw new Error("Impossible case : A task id should be unique");return t.id<e.id?-1:1}}this.sort(s)},this.allIDs=[],t&&this.push(...t.map((t=>new o.Task(t))))}}},310:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ExtractSyntaxError=e.GroupBySyntaxError=e.MovingTaskSyntaxError=e.DeletingTaskSyntaxError=e.EditingSyntaxError=e.IncrementingTaskSyntaxError=e.CheckingTaskSyntaxError=e.AddingTaskSyntaxError=e.ConfigError=e.StorageError=e.CLISyntaxError=void 0;const r=s(219);class a extends r.CatchableError{constructor(t,e,s){super(t,s),this.manEntry=e}}e.CLISyntaxError=a,e.StorageError=class extends a{constructor(t,e){super(t,"createStorage",e)}},e.ConfigError=class extends a{constructor(t,e){super(t,"createConfig",e)}},e.AddingTaskSyntaxError=class extends a{constructor(t,e){super(t,"creatingTask",e)}},e.CheckingTaskSyntaxError=class extends a{constructor(t,e){super(t,"checkingTask",e)}},e.IncrementingTaskSyntaxError=class extends a{constructor(t,e){super(t,"incrementingTask",e)}},e.EditingSyntaxError=class extends a{constructor(t,e){super(t,"editing",e)}},e.DeletingTaskSyntaxError=class extends a{constructor(t,e){super(t,"deleting",e)}},e.MovingTaskSyntaxError=class extends a{constructor(t,e){super(t,"movingTask",e)}},e.GroupBySyntaxError=class extends a{constructor(t,e){super(t,"viewing",e)}},e.ExtractSyntaxError=class extends a{constructor(t,e){super(t,"extracting",e)}}},219:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CatchableError=void 0;class s extends Error{constructor(t,e){super(t),this.details=e}}e.CatchableError=s},703:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SaveFileError=e.JSONParseError=e.FileAlreadyExistsError=e.FileNotFoundError=void 0;const r=s(219);class a extends r.CatchableError{constructor(t,e){super(`Can't find ${t}`,e)}}e.FileNotFoundError=a;class i extends r.CatchableError{constructor(t){super(`File ${t} already exists`)}}e.FileAlreadyExistsError=i;class o extends r.CatchableError{constructor(t,e){super(`Problem parsing ${t} to JSON`,e)}}e.JSONParseError=o;class n extends r.CatchableError{constructor(t,e){super(`Problem saving ${t} `,e)}}e.SaveFileError=n},647:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.NoFurtherStateError=e.TaskIdDuplicatedError=e.TaskStateUnknownError=e.TaskNotFoundError=void 0;const r=s(219);class a extends r.CatchableError{constructor(t,e){super(`Task n°${t} not found`,e)}}e.TaskNotFoundError=a;class i extends r.CatchableError{constructor(t,e,s){super(`Task's n°${t} state '${e}' is not defined, you can add it under the 'meta.states' in your tasks data file`,s)}}e.TaskStateUnknownError=i;class o extends r.CatchableError{constructor(t,e){super(`Multiple task has the id '${t}'`,e)}}e.TaskIdDuplicatedError=o;class n extends r.CatchableError{constructor(t,e){super(`Final state already reached for task '${t}'`,e)}}e.NoFurtherStateError=n},37:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MultipleValuesMismatchError=void 0;const r=s(219);class a extends r.CatchableError{constructor(t,e,s){super(`Multiple arguments should be of the same type, not ${t} and ${e}`,s)}}e.MultipleValuesMismatchError=a},22:t=>{t.exports=require("chalk")},245:t=>{t.exports=require("moment")},650:t=>{t.exports=require("prompts")},147:t=>{t.exports=require("fs")},17:t=>{t.exports=require("path")},598:t=>{t.exports=JSON.parse('{"name":"cli-task-manager","version":"0.1.4","description":"Providing an easy and usefull command line interface for managing tasks with local files","keywords":["cli","tasks","management"],"author":"Mike AUBENAS","license":"ISC","bin":{"task":"./bin/cli.js"},"files":["src","bin/cli.js"],"main":"src/Main.ts","repository":{"type":"git","url":"https://github.com/MikyStar/CLI-Manager"},"scripts":{"start":"NODE_ENV=dev npm run tsc && node dist/Main.js","tsc":"tsc","test":"echo \'No jest tests written yet\'","binary":"./scripts/make-binary.sh","security:audit":"npm audit --production --audit-level=moderate --registry=https://registry.npmjs.org","security:fix":"npm audit fix --production --audit-level=moderate --registry=https://registry.npmjs.org","dependencies:check":"ncu -e 2","dependencies:update":"ncu -u && npm run clear && npm install && npm run test","build":"NODE_OPTIONS=--openssl-legacy-provider webpack-cli","clear":"rm -rf node_modules dist build bin"},"devDependencies":{"@types/jest":"^27.4.0","jest":"^27.4.7","ts-jest":"^27.1.2","tslint":"^5.20.1","typescript":"^4.5.4"},"dependencies":{"@types/prompts":"^2.0.14","chalk":"^4.1.0","dotenv":"^11.0.0","moment":"^2.29.1","prompts":"^2.4.2","ts-loader":"^9.2.6","ts-node":"^10.4.0","webpack":"^5.66.0","webpack-cli":"^4.9.1","webpack-node-externals":"^3.0.0"}}')}},e={},s=function s(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,s),i.exports}(142);for(var r in s)this[r]=s[r];s.__esModule&&Object.defineProperty(this,"__esModule",{value:!0})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,