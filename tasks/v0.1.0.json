[
	{
		"name": "refactor argcli, i really should make a phrase out of args, being able to access second arg like first arg ...",
		"state": "done",
		"dependencies": [],
		"id": 5,
		"timestamp": "28/07/2021"
	},
	{
		"name": "if no board provided for add task, neither task id, use the default board name from the default config datas",
		"state": "todo",
		"dependencies": [],
		"id": 34,
		"timestamp": "28/07/2021"
	},
	{
		"name": "change the print flag to no print so by default it always prints",
		"state": "done",
		"dependencies": [],
		"description": "More appropriate way",
		"id": 35,
		"timestamp": "28/07/2021"
	},
	{
		"name": "refactor controller printer to be able to handle every kind of print",
		"state": "done",
		"dependencies": [],
		"id": 33,
		"timestamp": "01/08/2021",
		"subtasks": [
			{
				"name": "it should handle the separators, datas and the stats",
				"state": "done",
				"dependencies": [],
				"id": 40,
				"timestamp": "29/07/2021"
			}
		]
	},
	{
		"name": "Printer should be a class",
		"state": "done",
		"dependencies": [],
		"id": 51,
		"timestamp": "01/08/2021",
		"subtasks": [
			{
				"name": "I can append one or more line with params",
				"state": "done",
				"dependencies": [],
				"id": 52,
				"timestamp": "29/07/2021",
				"subtasks": [
					{
						"name": "maybe an other object with align, print at end, wrap, shorten with \"...\", indent level",
						"state": "done",
						"dependencies": [],
						"id": 53,
						"timestamp": "29/07/2021"
					}
				]
			}
		]
	},
	{
		"name": "Refactor default args",
		"state": "todo",
		"dependencies": [],
		"id": 47,
		"timestamp": "01/08/2021",
		"subtasks": [
			{
				"name": "change parent attribute name",
				"state": "todo",
				"dependencies": [],
				"id": 48,
				"timestamp": "29/07/2021"
			},
			{
				"name": "separate printing args from others",
				"state": "todo",
				"dependencies": [],
				"id": 49,
				"timestamp": "29/07/2021"
			},
			{
				"name": "have separated args for task view and agenda view",
				"state": "todo",
				"dependencies": [],
				"id": 50,
				"timestamp": "29/07/2021"
			}
		]
	},
	{
		"name": "when moved to subtask, the newly added task(s) is not printed, only the previous value",
		"state": "todo",
		"dependencies": [],
		"id": 70,
		"timestamp": "04/08/2021"
	},
	{
		"name": "print problem for description of last subtask child",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 77,
		"timestamp": "05/08/2021",
		"subtasks": [
			{
				"name": "maybe no | for description if no subtasks",
				"state": "todo",
				"dependencies": [
					null
				],
				"id": 79,
				"timestamp": "05/08/2021"
			}
		]
	},
	{
		"name": "a description flag as empty string should remove the description",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 78,
		"timestamp": "05/08/2021"
	},
	{
		"name": "duplicated task index -> NÂ°72",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 80,
		"timestamp": "05/08/2021"
	},
	{
		"name": "refactor init with better file classes like the creation arg in storage constructor",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 0,
		"timestamp": "06/08/2021"
	},
	{
		"name": "extraction",
		"state": "done",
		"dependencies": [],
		"id": 1,
		"timestamp": "25/07/2021"
	},
	{
		"name": "delete",
		"state": "done",
		"dependencies": [],
		"id": 2,
		"timestamp": "25/07/2021"
	},
	{
		"name": "edit",
		"state": "done",
		"dependencies": [],
		"id": 3,
		"timestamp": "25/07/2021"
	},
	{
		"name": "improve doc for commands",
		"state": "done",
		"dependencies": [],
		"description": "Bash like doc with optional arguments, examples ...",
		"id": 4,
		"timestamp": "25/07/2021"
	},
	{
		"name": "printing action documentation",
		"state": "done",
		"dependencies": [],
		"id": 6,
		"timestamp": "25/07/2021"
	},
	{
		"name": "add taggs with #",
		"state": "todo",
		"dependencies": [],
		"id": 7,
		"timestamp": "27/07/2021",
		"subtasks": [
			{
				"name": "new flag to hide taggs",
				"state": "todo",
				"dependencies": [],
				"id": 13,
				"timestamp": "27/07/2021"
			},
			{
				"name": "print tags like description but with #",
				"state": "todo",
				"dependencies": [],
				"id": 14,
				"timestamp": "27/07/2021"
			},
			{
				"name": "searching through tags",
				"state": "todo",
				"dependencies": [],
				"id": 15,
				"timestamp": "27/07/2021"
			},
			{
				"name": "taggs defined in config file",
				"state": "todo",
				"dependencies": [],
				"id": 17,
				"timestamp": "27/07/2021"
			}
		]
	},
	{
		"name": "add deadline",
		"state": "todo",
		"dependencies": [],
		"id": 8,
		"timestamp": "27/07/2021",
		"subtasks": [
			{
				"name": "change timestamp into deadline",
				"state": "todo",
				"dependencies": [],
				"id": 9,
				"timestamp": "27/07/2021"
			},
			{
				"name": "print remaining time aligned to the right with color code",
				"state": "todo",
				"dependencies": [],
				"id": 10,
				"timestamp": "27/07/2021"
			},
			{
				"name": "new flag --sort asc desc to print flatlisted",
				"state": "todo",
				"dependencies": [],
				"id": 11,
				"timestamp": "27/07/2021"
			},
			{
				"name": "new flag to hide deadline",
				"state": "todo",
				"dependencies": [],
				"id": 12,
				"timestamp": "27/07/2021"
			}
		]
	},
	{
		"name": "increment",
		"state": "done",
		"dependencies": [],
		"id": 18,
		"timestamp": "28/07/2021"
	},
	{
		"name": "--group flag",
		"state": "wip",
		"dependencies": [],
		"description": "to display with grouped state recursively",
		"id": 19,
		"timestamp": "28/07/2021",
		"subtasks": [
			{
				"name": "can be combined with --sort asc desc",
				"state": "wip",
				"dependencies": [],
				"id": 20,
				"timestamp": "28/07/2021"
			},
			{
				"name": "can be added in config file",
				"state": "wip",
				"dependencies": [],
				"id": 29,
				"timestamp": "28/07/2021"
			},
			{
				"name": "the function should return a IBoard",
				"state": "wip",
				"dependencies": [],
				"id": 25,
				"timestamp": "29/07/2021"
			},
			{
				"name": "there can be multiple times this flag -> raw arg should make it a a single value with array of GroubyInterface",
				"state": "wip",
				"dependencies": [
					null
				],
				"id": 16,
				"timestamp": "06/08/2021"
			}
		]
	},
	{
		"name": "clean board",
		"state": "todo",
		"dependencies": [],
		"id": 21,
		"timestamp": "28/07/2021"
	},
	{
		"name": "check",
		"state": "done",
		"dependencies": [],
		"id": 22,
		"timestamp": "28/07/2021"
	},
	{
		"name": "Action only <state | deadline | deadline range> to view only specifics",
		"state": "todo",
		"dependencies": [],
		"id": 23,
		"timestamp": "28/07/2021"
	},
	{
		"name": "--sort flag",
		"state": "todo",
		"dependencies": [],
		"id": 30,
		"timestamp": "28/07/2021",
		"subtasks": [
			{
				"name": "in config file too",
				"state": "todo",
				"dependencies": [],
				"id": 31,
				"timestamp": "28/07/2021"
			},
			{
				"name": "can be state(s), time range, deadline(s), tag(s)",
				"state": "todo",
				"dependencies": [],
				"id": 32,
				"timestamp": "28/07/2021"
			},
			{
				"name": "the function should return a IBoard",
				"state": "todo",
				"dependencies": [],
				"id": 26,
				"timestamp": "29/07/2021"
			}
		]
	},
	{
		"name": "moving task",
		"state": "done",
		"dependencies": [],
		"id": 24,
		"timestamp": "29/07/2021"
	},
	{
		"name": "stats for the total of all the boards in file and printed even in only print board view",
		"state": "done",
		"dependencies": [],
		"id": 27,
		"timestamp": "29/07/2021",
		"description": "so we cant forget that theres more",
		"subtasks": [
			{
				"name": "refactor actual stats to return on exploitable object so I can simply add the values",
				"state": "done",
				"dependencies": [],
				"id": 36,
				"timestamp": "29/07/2021"
			},
			{
				"name": "maybe the full file printing stats should be preceeded by its location",
				"state": "done",
				"dependencies": [],
				"id": 37,
				"timestamp": "29/07/2021",
				"subtasks": [
					{
						"name": "maybe the small sperator just before",
						"state": "done",
						"dependencies": [],
						"id": 38,
						"timestamp": "29/07/2021"
					}
				]
			}
		]
	},
	{
		"name": "if depth hide some tasks there should be an indicator",
		"state": "todo",
		"dependencies": [],
		"id": 28,
		"timestamp": "29/07/2021",
		"description": "like ...x",
		"subtasks": [
			{
				"name": "or the actual full recurive subtasks lenght",
				"state": "todo",
				"dependencies": [],
				"id": 39,
				"timestamp": "29/07/2021"
			}
		]
	},
	{
		"name": "no tree indicator if description but no subtask",
		"state": "todo",
		"dependencies": [],
		"id": 54,
		"timestamp": "30/07/2021"
	},
	{
		"name": "flag --no-completed to hide tasks at final state",
		"state": "todo",
		"dependencies": [],
		"id": 55,
		"timestamp": "31/07/2021"
	},
	{
		"name": "add priority",
		"state": "todo",
		"dependencies": [],
		"id": 63,
		"timestamp": "03/08/2021",
		"subtasks": [
			{
				"name": "can sort by it",
				"state": "todo",
				"dependencies": [],
				"id": 64,
				"timestamp": "03/08/2021"
			},
			{
				"name": "with !!!",
				"state": "todo",
				"dependencies": [],
				"id": 65,
				"timestamp": "04/08/2021"
			},
			{
				"name": "can de undefined",
				"state": "todo",
				"dependencies": [],
				"id": 66,
				"timestamp": "04/08/2021",
				"subtasks": [
					{
						"name": "if undefined dont add it in storage",
						"state": "todo",
						"dependencies": [],
						"id": 67,
						"timestamp": "04/08/2021"
					}
				]
			}
		]
	},
	{
		"name": "in the retrieve nested task, i might want to access the parent board id from the callback",
		"state": "done",
		"dependencies": [],
		"id": 71,
		"timestamp": "04/08/2021",
		"subtasks": []
	},
	{
		"name": "if only text arg, make a task",
		"state": "todo",
		"dependencies": [],
		"id": 74,
		"timestamp": "04/08/2021"
	},
	{
		"name": "add in readme that icon can be simple string too",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 41,
		"timestamp": "06/08/2021"
	},
	{
		"name": "clickabke",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 43,
		"timestamp": "09/10/2021"
	},
	{
		"name": "every task should have a real unique id and the id provided by user is only to make a relatioship with the real hash id",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 42,
		"timestamp": "19/12/2021"
	},
	{
		"name": "using yaml rather than JSON",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 44,
		"timestamp": "19/12/2021",
		"subtasks": [
			{
				"name": "need to properly remove empty arrays like for dependencies, subtasks ... from the final file",
				"state": "todo",
				"dependencies": [
					null
				],
				"id": 45,
				"timestamp": "19/12/2021"
			}
		]
	},
	{
		"name": "gitlike vim edition",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 46,
		"timestamp": "19/12/2021",
		"subtasks": [
			{
				"name": "like for editing a task -> would only bring a temp file in yaml with current task attributes ready to be modified EXCEPT the id hash key wich will be present in the temp file as a comment with a side text saying not modifyable",
				"state": "todo",
				"dependencies": [
					null
				],
				"id": 56,
				"timestamp": "19/12/2021"
			}
		]
	},
	{
		"name": "add a way to print only boards names with their stats as on overview of available boards",
		"state": "todo",
		"dependencies": [
			null
		],
		"id": 57,
		"timestamp": "19/12/2021"
	}
]